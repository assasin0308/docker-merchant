version: '3'

services:

  mysql:
    build:
      context: ./mysql
    volumes:
      - mysql-data:/var/lib/mysql
      - ./code/:/var/www/code
    command: --default-authentication-plugin=mysql_native_password --sql-mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - MYSQL_ROOT_PASSWORD=nosmoking
      - TZ=Asia/Shanghai
    ports:
      - "33060:3306"

  postgres:
    build:
      context: ./postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./code/:/var/www/code
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=nosmoking
      - TZ=Asia/Shanghai
    ports:
      - "54320:5432"

  redis:
    build:
      context: ./redis
    volumes:
      - redis-data:/data
      - ./conf/redis/redis.conf:/usr/local/etc/redis.conf
      - ./redis/redis-check-aof.sh:/usr/local/bin/redis-check-aof.sh
    command: bash -c "chmod +x /usr/local/bin/redis-check-aof.sh
      && /usr/local/bin/redis-check-aof.sh
      && /usr/local/bin/redis-server /usr/local/etc/redis.conf"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "63790:6379"

  phpredisadmin:
    build:
      context: ./phpredisadmin
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai
      - ADMIN_USER=admin
      - ADMIN_PASS=nosmoking
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
    ports:
      - "6380:6380"
    depends_on:
      - redis

  beanstalkd:
    build:
      context: ./beanstalkd
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "11300:11300"

  beanstalkd-console:
    build:
      context: ./beanstalkd-console
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai
      - AUTH=enable
      - AUTH_USERNAME=admin
      - AUTH_PASSWORD=nosmoking
      - BEANSTALKD_PORT_11300_TCP_ADDR=beanstalkd
    ports:
      - "2080:2080"
    depends_on:
      - beanstalkd

  gearmand:
    build:
      context: ./gearmand
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "4730:4730"
    command: ["--queue-type=redis", "--redis-server=redis", "--redis-port=6379"]

  php-fpm:
    build:
      context: ./php-fpm
    volumes:
      - ./conf/php/php.ini:/usr/local/etc/php/php.ini
      - ./conf/php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./conf/php-fpm/php-fpm.d:/usr/local/etc/php-fpm.d
      - ./code/:/var/www/code
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai

  php-cli:
    build:
      context: ./php-cli
    volumes:
#      - ~/.ssh/:/root/.ssh
      - ./conf/php/php.ini:/usr/local/etc/php/php.ini
      - ./code/:/var/www/code
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai

  nginx:
    build:
      context: ./nginx
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx/conf.d/:/etc/nginx/conf.d
      - ./conf/nginx/ssl/:/etc/nginx/ssl
      - ./logs/:/var/log/nginx
      - ./code/:/var/www/code
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "8000:80"
      - "44300:443"
    depends_on:
      - php-fpm

  etcd-01:
    build:
      context: ./etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes     # 允许不用密码登录
      - ETCD_NAME=etcd-01                 # etcd 的名字
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd1:2380 # 列出这个成员的伙伴 URL 以便通告给集群的其他成员
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380           # 用于监听伙伴通讯的URL列表
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379         # 用于监听客户端通讯的URL列表
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd1:2379        # 列出这个成员的客户端URL，通告给集群中的其他成员
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster             # 在启动期间用于 etcd 集群的初始化集群记号
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380 # 为启动初始化集群配置
      - ETCD_INITIAL_CLUSTER_STATE=new                      # 初始化集群状态
    ports:
      - 2379:2379
      - 2380:2380
    volumes:
    - ./runtime/etcd/etcd-01:/bitnami/etcd
    restart: always
    privileged: true


  composer:
    build:
      context: ./php-cli
    container_name: etcd-01
    volumes:
      - ~/.ssh/:/root/.ssh
      - ./conf/php/php.ini:/usr/local/etc/php/php.ini
      - ./code/:/var/www/code
    working_dir: /var/www/code
    entrypoint: ['composer']
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai

  node:
    build:
      context: ./node
    volumes:
      - ./code/:/var/www/code
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai




  elasticsearch:
    build:
      context: ./elasticsearch
    restart: always
    hostname: es1
    container_name: es-single
    volumes:
      - ./conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./runtime/elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - ./runtime/elasticsearch/data:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node" #以单一节点模式启动
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TZ=Asia/Shanghai"
    ports:
      - "9200:9200"
      - "9300:9300"
    privileged: true


  kibana:
    build:
      context: ./kibana
    restart: always
    container_name: kibana
    volumes:
      - ./conf/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    privileged: true
    environment:
      - "elasticsearch.hosts=http://es:9200" #设置访问elasticsearch的地址
      - "TZ=Asia/Shanghai"
    links:
      - elasticsearch:es #可以用es这个域名访问elasticsearch服务

  logstash:
    build:
      context: ./logstash
    container_name: logstash
    environment:
      - "TZ=Asia/Shanghai"
    volumes:
      - ./conf/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:es
    ports:
      - "5044:5044"



  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
#    command:
#      - "--path.rootfs=/host"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "9100:9100"

  prometheus:
    build:
      context: ./prometheus
    restart: always
    container_name: prometheus
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.external-url=prometheus'
    volumes:
      - ./conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./runtime/prometheus:/prometheus


  grafana:
    build:
      context: ./grafana
    restart: on-failure
    container_name: grafana
    user: "0"
    environment:
      - TZ=Asia/Shanghai
      - GF_LOG_LEVEL=error
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    volumes:
#      - ./conf/grafana:/etc/grafana
#      - ./conf/dashboards:/tmp/dashboards
      - ./runtime/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    privileged: true


  rabbitmq01:
    build:
      context: ./rabbitmq
    container_name: rabbitmq01
    ports:
      - "15672:15672"
      - "5673:5672"
    hostname: rabbitmq01
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=nosmoking
      # 集群通信(节点认证作用，集群部署需要同步该值，且值必须相同)
      - RABBITMQ_ERLANG_COOKIE=rabbitcookie
      # 群集中的节点名称必须唯一(在集群中各节点使用节点名称来识别和联系彼此)
      - RABBITMQ_NODENAME：rabbitmq01
      #如果系统使用完全限定的域名(FQDNs)作为主机名，则RabbitMQ节点和CLI工具必须配置为使用所谓的长节点名。
      # 对于服务器节点，这是通过将RABBITMQ_USE_LONGNAME环境变量设置为true来实现的。在不重置节点的情况下，无法将其从短名称切换到长名称。
    volumes:
      - ./runtime/rabbitmq/rabbitmq01/:/var/lib/rabbitmq
      - ./runtime/rabbitmq/rabbitmq01/:/var/log/rabbitmq

  rabbitmq02:
   build:
     context: ./rabbitmq
   container_name: rabbitmq02
   ports:
     - "15674:15672"
     - "5674:5672"
   hostname: rabbitmq02
   restart: unless-stopped
   privileged: true
   environment:
     # 集群通信
     - TZ=Asia/Shanghai
     - LANG=en_US.UTF-8
     - RABBITMQ_ERLANG_COOKIE=rabbitcookie
     - RABBITMQ_DEFAULT_USER=admin
     - RABBITMQ_DEFAULT_PASS=nosmoking
      # 群集中的节点名称必须唯一(在集群中各节点使用节点名称来识别和联系彼此)
     - RABBITMQ_NODENAME：rabbitmq02
      #如果系统使用完全限定的域名(FQDNs)作为主机名，则RabbitMQ节点和CLI工具必须配置为使用所谓的长节点名。对于服务器节点，这是通过将RABBITMQ_USE_LONGNAME环境变量设置为true来实现的。在不重置节点的情况下，无法将其从短名称切换到长名称。
     - RABBITMQ_CLUSTERED=true                   # 当前容器身份是从，会执行rabbitmqctl join_cluster命令加入到集群中去；
     - RABBITMQ_CLUSTER_WITH=rabbit@rabbitmq01   # join的参数
     - RABBITMQ_RAM_NODE=true                    # ram是以内存方式加入,忽略该参数默认为磁盘节点。
   volumes:
     - ./runtime/rabbitmq/rabbitmq02/:/var/lib/rabbitmq
     - ./runtime/rabbitmq/rabbitmq02/:/var/log/rabbitmq
      #     - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      # 如果要重建集群的话必须把rabbitmq lib目录中的/mnesi目录删除掉
   depends_on:
     - "rabbitmq01"

  rabbitmq03:
    build:
      context: ./rabbitmq
    container_name: rabbitmq03
    ports:
      - "15675:15672"
      - "5675:5672"
    hostname: rabbitmq03
    privileged: true
    restart: unless-stopped
#    links:
#      - rabbitmq01
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
      - RABBITMQ_ERLANG_COOKIE=rabbitcookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=nosmoking
      - RABBITMQ_NODENAME：rabbitmq03
      - RABBITMQ_CLUSTERED=true
      - RABBITMQ_CLUSTER_WITH=rabbit@rabbitmq01
      - RABBITMQ_RAM_NODE=true
    volumes:
      - ./runtime/rabbitmq/rabbitmq03/:/var/lib/rabbitmq
      - ./runtime/rabbitmq/rabbitmq03/:/var/log/rabbitmq
    depends_on:
      - rabbitmq01


  rocketmq-namesrv:
    build:
      context: ./rocketmq
    container_name: rocketmq-namesrv
    ports:
      - "9876:9876"
    volumes:
      - ./runtime/rocketmq/logs:/home/rocketmq/logs
      - ./runtime/rocketmq/store:/home/rocketmq/store

  rocketmq-broker:
    build:
      context: ./rmqbroker
    container_name: rocketmq-broker
    ports:
      - "10909:10909"
      - "10911:10911"
    volumes:
      - ./runtime/rocketmq/broker01/logs:/home/rocketmq//logs
      - ./runtime/rocketmq/broker01/store:/home/rocketmq/store
      - ./conf/rocketmq/broker/broker.conf:/etc/rocketmq/broker.conf
    environment:
      NAMESRV_ADDR: "rocketmq-namesrv:9876"
      JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m"
    # 启动命令
    command: ["sh","mqbroker","-c","/etc/rocketmq/broker.conf","-n","rocketmq-namesrv:9876","autoCreateTopicEnable=true"]
    depends_on:
      - rocketmq-namesrv

#  rocketmq-broker-slave:
#    build:
#      context: ./rmqbroker
#    container_name: rocketmq-broker-slave
#    ports:
#      - "10919:10919"
#      - "10921:10921"
#    volumes:
#      - ./runtime/rocketmq/broker-slave/logs:/home/rocketmq//logs
#      - ./runtime/rocketmq/broker-slave/store:/home/rocketmq/store
#      - ./conf/rocketmq/broker/broker.conf:/etc/rocketmq/broker.conf
#    environment:
#      NAMESRV_ADDR: "rocketmq-namesrv:9876"
#      JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m"
#    # 启动命令
#    command: ["sh","mqbroker","-c","/etc/rocketmq/broker.conf","-n","rocketmq-namesrv:9876","autoCreateTopicEnable=true"]
#    depends_on:
#      - rocketmq-namesrv
  rmqconsole:
    build:
      context: ./rmqconsole
    container_name: rmqconsole
    ports:
      - "18080:18080"
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=rocketmq-namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"
    depends_on:
      - rocketmq-namesrv



  mongo:
    build:
      context: ./mongo
    container_name: mongo
    hostname: mongo
    restart: always
    privileged: true
    ports:
      - "27017:27017"
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_DATABASE: test
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: nosmoking
    volumes:
      - ./runtime/mongo/data:/data/db
      - ./conf/mongo/conf:/data/configdb
      - ./runtime/mongo/init/:/docker-entrypoint-initdb.d/
    command: mongod


  mongo-express:
    build:
      context: ./mongo-express
    container_name: mongo-express
    privileged: true
    restart: always
    links:
      - mongo:mongo
    depends_on:
      - mongo
    ports:
      - "27018:8081"
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: 3024-night
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: nosmoking
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: nosmoking








volumes:
  mysql-data: 
  postgres-data: 
  redis-data: 
